"""Add StockDividend and StockSplit models

Revision ID: d60eeb05622e
Revises: 8cf8bf51d248
Create Date: 2025-06-27 23:01:49.044556

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd60eeb05622e'
down_revision: Union[str, Sequence[str], None] = '8cf8bf51d248'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stock_dividends',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('security_id', sa.Integer(), nullable=False),
    sa.Column('ex_dividend_date', sa.Date(), nullable=False, comment='除权日'),
    sa.Column('declaration_date', sa.Date(), nullable=True, comment='公告日'),
    sa.Column('record_date', sa.Date(), nullable=True, comment='股权登记日'),
    sa.Column('pay_date', sa.Date(), nullable=True, comment='派息日'),
    sa.Column('cash_amount', sa.Numeric(precision=20, scale=10), nullable=False, comment='每股分红金额'),
    sa.Column('currency', sa.String(length=10), nullable=False, comment='分红货币 (USD, HKD等)'),
    sa.Column('frequency', sa.Integer(), nullable=True, comment='分红频率 (e.g., 0:一次性, 1:年, 2:半年, 4:季度)'),
    sa.ForeignKeyConstraint(['security_id'], ['securities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('security_id', 'ex_dividend_date', 'cash_amount', name='_dividend_uc')
    )
    op.create_index(op.f('ix_stock_dividends_ex_dividend_date'), 'stock_dividends', ['ex_dividend_date'], unique=False)
    op.create_index(op.f('ix_stock_dividends_security_id'), 'stock_dividends', ['security_id'], unique=False)
    op.create_table('stock_splits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('security_id', sa.Integer(), nullable=False),
    sa.Column('execution_date', sa.Date(), nullable=False, comment='拆/合股执行日'),
    sa.Column('declaration_date', sa.Date(), nullable=True, comment='公告日'),
    sa.Column('split_to', sa.Numeric(precision=20, scale=10), nullable=False, comment='拆股后的份数 (e.g., 2-for-1 split, a value of 2)'),
    sa.Column('split_from', sa.Numeric(precision=20, scale=10), nullable=False, comment='拆股前的份数 (e.g., 2-for-1 split, a value of 1)'),
    sa.ForeignKeyConstraint(['security_id'], ['securities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('security_id', 'execution_date', name='_split_uc')
    )
    op.create_index(op.f('ix_stock_splits_execution_date'), 'stock_splits', ['execution_date'], unique=False)
    op.create_index(op.f('ix_stock_splits_security_id'), 'stock_splits', ['security_id'], unique=False)
    op.drop_table('special_adjustments')
    op.drop_index(op.f('ix_corporate_actions_event_date'), table_name='corporate_actions')
    op.drop_table('corporate_actions')
    op.alter_column('trading_calendars', 'market',
               existing_type=postgresql.ENUM('CNA', 'HK', 'US', 'CRYPTO', 'FOREX', 'INDEX', name='market_type'),
               type_=sa.String(length=50),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('trading_calendars', 'market',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('CNA', 'HK', 'US', 'CRYPTO', 'FOREX', 'INDEX', name='market_type'),
               existing_nullable=False)
    op.create_table('corporate_actions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('security_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('event_type', postgresql.ENUM('DIVIDEND', 'SPLIT', 'BONUS', name='action_type'), autoincrement=False, nullable=False),
    sa.Column('value', sa.NUMERIC(precision=20, scale=10), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('corporate_actions_pkey')),
    sa.UniqueConstraint('security_id', 'event_date', 'event_type', name=op.f('_security_date_type_uc'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_corporate_actions_event_date'), 'corporate_actions', ['event_date'], unique=False)
    op.create_table('special_adjustments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('security_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('adjustment_factor', sa.NUMERIC(precision=20, scale=10), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('special_adjustments_pkey')),
    sa.UniqueConstraint('security_id', 'event_date', name=op.f('_security_date_uc'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_index(op.f('ix_stock_splits_security_id'), table_name='stock_splits')
    op.drop_index(op.f('ix_stock_splits_execution_date'), table_name='stock_splits')
    op.drop_table('stock_splits')
    op.drop_index(op.f('ix_stock_dividends_security_id'), table_name='stock_dividends')
    op.drop_index(op.f('ix_stock_dividends_ex_dividend_date'), table_name='stock_dividends')
    op.drop_table('stock_dividends')
    # ### end Alembic commands ###
