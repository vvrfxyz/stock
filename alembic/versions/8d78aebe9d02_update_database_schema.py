"""Update database schema

Revision ID: 8d78aebe9d02
Revises: ccb3056986be
Create Date: 2025-06-27 11:29:40.474763

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8d78aebe9d02'
down_revision: Union[str, Sequence[str], None] = 'ccb3056986be'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('daily_prices', 'volume',
               existing_type=sa.BIGINT(),
               comment=None,
               existing_comment='成交量（股）',
               existing_nullable=True)
    op.alter_column('daily_prices', 'adj_close',
               existing_type=sa.NUMERIC(precision=19, scale=6),
               comment=None,
               existing_comment='后复权收盘价',
               existing_nullable=True)
    op.alter_column('daily_prices', 'adj_factor',
               existing_type=sa.NUMERIC(precision=20, scale=6),
               comment=None,
               existing_comment='后复权因子',
               existing_nullable=False,
               existing_server_default=sa.text('1.0'))
    op.drop_column('daily_prices', 'avg_price')
    op.drop_column('daily_prices', 'turnover_rate')
    op.drop_column('daily_prices', 'amount')
    op.add_column('securities', sa.Column('cik', sa.String(length=20), nullable=True, comment='SEC CIK 中央索引码'))
    op.add_column('securities', sa.Column('composite_figi', sa.String(length=20), nullable=True, comment='复合金融工具全球标识符 (FIGI)'))
    op.add_column('securities', sa.Column('share_class_figi', sa.String(length=20), nullable=True, comment='股份类别FIGI标识符'))
    op.add_column('securities', sa.Column('market_cap', sa.Numeric(precision=25, scale=4), nullable=True, comment='最新市值 (以交易货币为单位)'))
    op.add_column('securities', sa.Column('phone_number', sa.String(length=50), nullable=True, comment='公司联系电话'))
    op.add_column('securities', sa.Column('description', sa.Text(), nullable=True, comment='公司业务描述'))
    op.add_column('securities', sa.Column('homepage_url', sa.String(length=255), nullable=True, comment='公司官网地址'))
    op.add_column('securities', sa.Column('total_employees', sa.Integer(), nullable=True, comment='员工总数'))
    op.add_column('securities', sa.Column('sic_code', sa.String(length=10), nullable=True, comment='标准行业分类(SIC)代码'))
    op.add_column('securities', sa.Column('address_line1', sa.String(length=255), nullable=True, comment='公司地址行1'))
    op.add_column('securities', sa.Column('city', sa.String(length=100), nullable=True, comment='公司所在城市'))
    op.add_column('securities', sa.Column('state', sa.String(length=100), nullable=True, comment='公司所在州/省'))
    op.add_column('securities', sa.Column('postal_code', sa.String(length=20), nullable=True, comment='邮政编码'))
    op.add_column('securities', sa.Column('logo_url', sa.Text(), nullable=True, comment='公司Logo的URL'))
    op.add_column('securities', sa.Column('icon_url', sa.Text(), nullable=True, comment='公司Icon的URL'))
    op.alter_column('securities', 'symbol',
               existing_type=sa.VARCHAR(length=30),
               comment="标准化的、小写的证券代码 (例如 'aapl', 'nvda', '00700')",
               existing_comment='标准化的证券代码 (如 600519, NVDA, 00700)',
               existing_nullable=False)
    op.alter_column('securities', 'em_code',
               existing_type=sa.VARCHAR(length=30),
               comment="东方财富专用代码, 用于关联 (例如 '105.NVDA')",
               existing_comment='东方财富专用代码 (如 106600519, 105.NVDA)',
               existing_nullable=True)
    op.alter_column('securities', 'name',
               existing_type=sa.VARCHAR(length=255),
               comment='公司或证券的官方全名',
               existing_nullable=True)
    op.alter_column('securities', 'market',
               existing_type=postgresql.ENUM('CNA', 'HK', 'US', 'CRYPTO', 'FOREX', 'INDEX', name='market_type'),
               comment='市场板块 (US, HK, CNA等)',
               existing_nullable=False)
    op.alter_column('securities', 'type',
               existing_type=postgresql.ENUM('STOCK', 'ETF', 'INDEX', 'CRYPTO', 'FOREX', 'PREFERRED_STOCK', 'WARRANT', 'OTC', 'MUTUAL_FUND', name='asset_type'),
               comment='资产类型 (STOCK, ETF等)',
               existing_nullable=False)
    op.alter_column('securities', 'exchange',
               existing_type=sa.VARCHAR(length=50),
               comment="主要上市交易所代码 (例如 'XNAS', 'NYSE', 'HKEX')",
               existing_comment='交易所 (如 SSE, SZSE, NASDAQ, NYSE, HKEX)',
               existing_nullable=True)
    op.alter_column('securities', 'currency',
               existing_type=sa.VARCHAR(length=10),
               comment="交易货币 (例如 'USD', 'HKD')",
               existing_nullable=True)
    op.alter_column('securities', 'industry',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               comment='行业描述 (来自SIC描述)',
               existing_nullable=True)
    op.alter_column('securities', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='该证券是否仍在活跃交易',
               existing_nullable=True)
    op.alter_column('securities', 'list_date',
               existing_type=sa.DATE(),
               comment='上市日期',
               existing_nullable=True)
    op.alter_column('securities', 'delist_date',
               existing_type=sa.DATE(),
               comment='退市日期',
               existing_nullable=True)
    op.alter_column('securities', 'info_last_updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='非价格详情(名称/描述等)的上次更新时间',
               existing_comment='基本信息上次成功更新的时间',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('securities', 'price_data_latest_date',
               existing_type=sa.DATE(),
               comment='日线价格数据在数据库中覆盖的最新日期',
               existing_comment='日线价格数据覆盖的最新日期',
               existing_nullable=True)
    op.alter_column('securities', 'full_data_last_updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='上一次全量历史价格数据更新的成功时间',
               existing_comment='上一次全量历史数据更新的成功时间',
               existing_nullable=True)
    op.alter_column('securities', 'actions_last_updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='公司行动数据(分红/拆股)的上次更新时间',
               existing_comment='公司行动数据（分红/拆股）上次成功更新的时间',
               existing_nullable=True)
    op.alter_column('securities', 'full_refresh_interval',
               existing_type=sa.INTEGER(),
               comment='自动全量刷新的随机周期(天)',
               existing_comment='自动全量刷新的随机周期（天）',
               existing_nullable=False)
    op.create_index(op.f('ix_securities_cik'), 'securities', ['cik'], unique=False)
    op.create_index(op.f('ix_securities_composite_figi'), 'securities', ['composite_figi'], unique=False)
    op.create_index(op.f('ix_securities_share_class_figi'), 'securities', ['share_class_figi'], unique=False)
    op.drop_column('securities', 'sector')
    op.drop_column('securities', 'last_updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('securities', sa.Column('last_updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='记录行任意更新的时间'))
    op.add_column('securities', sa.Column('sector', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_securities_share_class_figi'), table_name='securities')
    op.drop_index(op.f('ix_securities_composite_figi'), table_name='securities')
    op.drop_index(op.f('ix_securities_cik'), table_name='securities')
    op.alter_column('securities', 'full_refresh_interval',
               existing_type=sa.INTEGER(),
               comment='自动全量刷新的随机周期（天）',
               existing_comment='自动全量刷新的随机周期(天)',
               existing_nullable=False)
    op.alter_column('securities', 'actions_last_updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='公司行动数据（分红/拆股）上次成功更新的时间',
               existing_comment='公司行动数据(分红/拆股)的上次更新时间',
               existing_nullable=True)
    op.alter_column('securities', 'full_data_last_updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='上一次全量历史数据更新的成功时间',
               existing_comment='上一次全量历史价格数据更新的成功时间',
               existing_nullable=True)
    op.alter_column('securities', 'price_data_latest_date',
               existing_type=sa.DATE(),
               comment='日线价格数据覆盖的最新日期',
               existing_comment='日线价格数据在数据库中覆盖的最新日期',
               existing_nullable=True)
    op.alter_column('securities', 'info_last_updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='基本信息上次成功更新的时间',
               existing_comment='非价格详情(名称/描述等)的上次更新时间',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('securities', 'delist_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='退市日期',
               existing_nullable=True)
    op.alter_column('securities', 'list_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='上市日期',
               existing_nullable=True)
    op.alter_column('securities', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='该证券是否仍在活跃交易',
               existing_nullable=True)
    op.alter_column('securities', 'industry',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='行业描述 (来自SIC描述)',
               existing_nullable=True)
    op.alter_column('securities', 'currency',
               existing_type=sa.VARCHAR(length=10),
               comment=None,
               existing_comment="交易货币 (例如 'USD', 'HKD')",
               existing_nullable=True)
    op.alter_column('securities', 'exchange',
               existing_type=sa.VARCHAR(length=50),
               comment='交易所 (如 SSE, SZSE, NASDAQ, NYSE, HKEX)',
               existing_comment="主要上市交易所代码 (例如 'XNAS', 'NYSE', 'HKEX')",
               existing_nullable=True)
    op.alter_column('securities', 'type',
               existing_type=postgresql.ENUM('STOCK', 'ETF', 'INDEX', 'CRYPTO', 'FOREX', 'PREFERRED_STOCK', 'WARRANT', 'OTC', 'MUTUAL_FUND', name='asset_type'),
               comment=None,
               existing_comment='资产类型 (STOCK, ETF等)',
               existing_nullable=False)
    op.alter_column('securities', 'market',
               existing_type=postgresql.ENUM('CNA', 'HK', 'US', 'CRYPTO', 'FOREX', 'INDEX', name='market_type'),
               comment=None,
               existing_comment='市场板块 (US, HK, CNA等)',
               existing_nullable=False)
    op.alter_column('securities', 'name',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='公司或证券的官方全名',
               existing_nullable=True)
    op.alter_column('securities', 'em_code',
               existing_type=sa.VARCHAR(length=30),
               comment='东方财富专用代码 (如 106600519, 105.NVDA)',
               existing_comment="东方财富专用代码, 用于关联 (例如 '105.NVDA')",
               existing_nullable=True)
    op.alter_column('securities', 'symbol',
               existing_type=sa.VARCHAR(length=30),
               comment='标准化的证券代码 (如 600519, NVDA, 00700)',
               existing_comment="标准化的、小写的证券代码 (例如 'aapl', 'nvda', '00700')",
               existing_nullable=False)
    op.drop_column('securities', 'icon_url')
    op.drop_column('securities', 'logo_url')
    op.drop_column('securities', 'postal_code')
    op.drop_column('securities', 'state')
    op.drop_column('securities', 'city')
    op.drop_column('securities', 'address_line1')
    op.drop_column('securities', 'sic_code')
    op.drop_column('securities', 'total_employees')
    op.drop_column('securities', 'homepage_url')
    op.drop_column('securities', 'description')
    op.drop_column('securities', 'phone_number')
    op.drop_column('securities', 'market_cap')
    op.drop_column('securities', 'share_class_figi')
    op.drop_column('securities', 'composite_figi')
    op.drop_column('securities', 'cik')
    op.add_column('daily_prices', sa.Column('amount', sa.NUMERIC(precision=25, scale=6), autoincrement=False, nullable=True, comment='成交额'))
    op.add_column('daily_prices', sa.Column('turnover_rate', sa.NUMERIC(precision=10, scale=6), autoincrement=False, nullable=True, comment='换手率(%)'))
    op.add_column('daily_prices', sa.Column('avg_price', sa.NUMERIC(precision=19, scale=6), autoincrement=False, nullable=True, comment='平均价 (成交额/成交量)'))
    op.alter_column('daily_prices', 'adj_factor',
               existing_type=sa.NUMERIC(precision=20, scale=6),
               comment='后复权因子',
               existing_nullable=False,
               existing_server_default=sa.text('1.0'))
    op.alter_column('daily_prices', 'adj_close',
               existing_type=sa.NUMERIC(precision=19, scale=6),
               comment='后复权收盘价',
               existing_nullable=True)
    op.alter_column('daily_prices', 'volume',
               existing_type=sa.BIGINT(),
               comment='成交量（股）',
               existing_nullable=True)
    # ### end Alembic commands ###
